---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tweetpostingservice-sa
  namespace: default

---

apiVersion: v1
kind: Service
metadata:
  name: tweetpostingservice
  namespace: default
  labels:
    app: tweetpostingservice
spec:
  selector:
    app: tweetpostingservice
  ports:
    - protocol: TCP
      port: 8080         # Service is exposed on port 8080
      targetPort: 8080   # Forwards traffic to container's port 8080
  type: ClusterIP         # Internal access only; use LoadBalancer for external access

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tweetpostingservice
  namespace: default
  labels:
    app: tweetpostingservice
spec:
  replicas: 3  # Ensures high availability with 3 instances of the application
  selector:
    matchLabels:
      app: tweetpostingservice
  template:
    metadata:
      labels:
        app: tweetpostingservice
    spec:
      serviceAccountName: tweetpostingservice-sa # Use the defined ServiceAccount
      containers:
        - name: tweetpostingservice
          image: socialnetworkapp/tweetpostingservice
          imagePullPolicy: Never
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tweetpostingservice-allow-specific-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: tweetpostingservice
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector: # Allow traffic only from API Gateway
            matchLabels:
              app: apigateway
        - podSelector: # Allow traffic from InteractionService
            matchLabels:
              app: interactionservice
        - podSelector: # Allow traffic from RabbitMQ
            matchLabels:
              app: rabbitmq
